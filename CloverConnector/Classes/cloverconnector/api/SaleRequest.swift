/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

import ObjectMapper


public class SaleRequest:TransactionRequest {

    public var allowOfflinePayment:Bool?
    public var approveOfflinePaymentWithoutPrompt:Bool?
    public var disableCashback:Bool?
    public var disableTipOnScreen:Bool?
    public var taxAmount:Int?
    public var tipAmount:Int?
    public var tipMode:TipMode?
    public var tippableAmount:Int?
    public var forceOfflinePayment:Bool?
    
    public override var type:TransactionType {
        get {
            return TransactionType.PAYMENT
        }
        set {
            // do nothing
        }
    }
    
    public override init(amount:Int, externalId:String) {
        super.init(amount:amount, externalId:externalId)
    }
    
    public required init?(_ map: Map) {
        super.init(map)
    }

    public override func mapping(map: Map) {
        tippableAmount <- map["tippableAmount"]
        tipAmount <- map["tipAmount"]
        taxAmount <- map["taxAmount"]
        disableCashback <- map["disableCashback"]
        disableTipOnScreen <- map["disableTipOnScreen"]
        allowOfflinePayment <- map["allowOfflinePayment"]
        approveOfflinePaymentWithoutPrompt <- map["approveOfflinePaymentWithoutPrompt"]
        tipMode <- map["tipMode"]
        forceOfflinePayment <- map["forceOfflinePayment"]
    }

    public enum TipMode:String {
        case TIP_PROVIDED = "TIP_PROVIDED"
        case ON_SCREEN_BEFORE_PAYMENT = "ON_SCREEN_BEFORE_PAYMENT"
        case NO_TIP = "NO_TIP"
    }

}

