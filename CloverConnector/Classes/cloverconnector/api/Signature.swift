/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */

import Foundation
import ObjectMapper


public class Signature:Mappable {

  /*
  * A series of strokes representing a signature
   */
//  public var strokes:ListWrapper<Points>? = nil
    public var strokes:Array<Stroke>?
    public var width:Int?
    public var height:Int?

  public required init() {

  }

  required public init?(_ map: Map) {
    
  }

  public func mapping(map:Map) {
    strokes <- map["strokes"]
    width <- map["width"]
    height <- map["height"]
  }

/*
  public required init(jsonObj:NSDictionary){
    super.init()

  strokes = ListWrapper<Points>(jsonObj: jsonObj.valueForKey("strokes") as! NSDictionary)

  }
*/

    public class Stroke:Mappable {
        public var points:Array<Point>?
        
        required public init?(_ map: Map) {
            
        }
        
        public func mapping(map:Map) {
            points <- map["points"]
        }
    }
    
    
}

